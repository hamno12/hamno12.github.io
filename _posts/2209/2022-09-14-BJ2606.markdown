---
layout: post
title: 바이러스
date: 2022-09-14 23:12:23 +0900
categories : BAEKJOON 
---
# 바이러스

> https://www.acmicpc.net/problem/2606




This is code
```java
import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.*;
import java.io.IOException;

public class Main {

    static int[][] ary;
    static boolean[] visit;
    static int count = 0; 
    
    public static void main(String[] args) throws IOException {

        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));

        int N = Integer.parseInt(br.readLine());
        int M = Integer.parseInt(br.readLine());

        ary = new int[N + 1][N + 1];
        visit = new boolean[N + 1];
        StringTokenizer tmp;

        for (int i = 0; i < M; i++) {
            tmp = new StringTokenizer(br.readLine());
            int X = Integer.parseInt(tmp.nextToken());
            int Y = Integer.parseInt(tmp.nextToken());
            ary[X][Y] = ary[Y][X] = 1;
        }
    
        //bw.write(String.valueOf(BFS(1)));
        bw.write(String.valueOf(DFS(1)));


        bw.flush();
        bw.close();
       
    }

	public static int BFS(int i) {
		Queue<Integer> queue = new LinkedList<Integer>();
		queue.offer(i);
		visit[i] = true;
		while(queue.isEmpty() == false) {
			int temp = queue.poll();
			for (int j = 1; j < ary.length; j++) {
                if (ary[temp][j] == 1 && visit[j] == false) {
                    queue.offer(j);
                    visit[j] = true;
                    count++;
                }
            }
		}
		
		return count;
    }

	public static int DFS(int i) {
        
        visit[i] = true;
        for (int j = 0; j < ary.length; j++) {
            if (ary[i][j] == 1 && visit[j] == false) {
                count++;
                DFS(j);
            }
        }

		return count;
    }

}


```