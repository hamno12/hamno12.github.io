---
layout: post
title: 마인크래프트 
date: 2022-08-22 23:45:23 +0900
categories : BAEKJOON 2208
---
# 마인크래프트 

> https://www.acmicpc.net/problem/18111


This is code
```java
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.*;

public class Main {


    public static void main(String[] args) throws IOException {

        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringBuilder sb = new StringBuilder();

        String[] nums = br.readLine().split(" ");
        int N = Integer.parseInt(nums[0]);
        int M = Integer.parseInt(nums[1]);
        int B = Integer.parseInt(nums[2]);


        int[][] ary = new int[N][M];
        int time = 0;
        int  tmp = 0;
        int max = 0;
        int min = 257;
        int maxHigh = 0;
        int minTime = 999999999;

        for (int i = 0; i < N; i++) {
            String[] locs = br.readLine().split(" ");
            for (int j = 0; j < M; j++) {
                ary[i][j] = Integer.parseInt(locs[j]);
                min = Math.min(min, ary[i][j]);
                max = Math.max(max, ary[i][j]);
            }
        }


        for (int h = min;  h <= max; h++) {
            time = 0;
            tmp = B;
            for (int i = 0; i < ary.length; i++) {
                for (int j = 0; j < ary[0].length; j++) {
                    if(ary[i][j] > h){
                        time += (ary[i][j] - h) * 2;
                        tmp += (ary[i][j] - h);
                    }else{
                        time += (h - ary[i][j]);
                        tmp -= (h - ary[i][j]);
                    }
                }
            }

            if (minTime > time && tmp >= 0 ) {
                maxHigh = h;
                minTime = time;
            }else if (minTime == time && maxHigh < h && tmp >= 0) {
                maxHigh = h;
                minTime = time;
            }
        }

        System.out.println(minTime + " " + maxHigh);

    }

}


```